import { Button, CircularProgress } from '@material-ui/core';
import axios from 'axios';
import Head from 'next/head'
import Image from 'next/image'
import React, { useState } from 'react';
import styles from '../../styles/Home.module.css'

export default function Home() {
  const [selectedFile, setSelectedFile] = useState<string | null>(null);
  const [inProgress, setInProgress] = useState(false);
  const [distance, setDistance] = useState("");
  // On file select (from the pop up)
  const onFileChange = async (event: any) => {
    if (!event.target.files[0]) {
      return;
    }
    // Update the state
    const base64Img = await toBase64(event.target.files[0]);
    if (!!base64Img) {
      setSelectedFile(base64Img);
    }
  };

  const toBase64 = (file: File) =>
    new Promise<string | undefined>((resolve, reject) => {
      const reader = new FileReader();
      reader.readAsDataURL(file);
      reader.onload = () => resolve(reader.result?.toString());
      reader.onerror = (error) => reject(error);
    });

  // On file upload (click the upload button)
  const onFileUpload = async () => {
    if (!selectedFile) {
      return;
    }
    setDistance("");
    setInProgress(true);
    // Details of the uploaded file
    // console.log(base64Img);

    const info = {
      type: "O",
      filedata: selectedFile,
    };

    // Request made to the backend api
    // Send formData object
    const url =
      "https://ti9qsdjhe4.execute-api.ap-southeast-1.amazonaws.com/dev/upload?time=" + Date.now();
    const response = await axios.post(url, info);
    if (!!response.data) {
      await getAnswer(response.data.id);
    }
  };

  const getAnswer = async (id: string) => {
    const distance = await new Promise<string>((resolve, reject) => {
      const i = setInterval(async () => {
        const url =
          "https://ti9qsdjhe4.execute-api.ap-southeast-1.amazonaws.com/dev/getitem?id=" +
          id;
        console.log("Check")
        const response = await axios.get(url);
        console.log(response.data)
        if (!!response.data.distance) {
          console.log("clearInterval")
          clearInterval(i);
          resolve(response.data.distance);
        }
      }, 5000);
    });
    setDistance(distance);
    setInProgress(false);
  };

  // File content to be displayed after
  // file upload is complete
  const FileData = () => {
    if (!!selectedFile) {
      return <Image src={selectedFile} layout="fill" objectFit="contain" />;
    } else {
      return (
        <div>
          <h4>กรุณาเลือกรูปภาพก่อนที่ให้ &quot;เทคโนโลยีสมัยนี้&quot; วิเคราะห์</h4>
        </div>
      );
    }
  };

  // Create a reference to the hidden file input element
  const hiddenFileInput = React.useRef<any>(null);

  // Programatically click the hidden file input element
  // when the Button component is clicked
  const handleClick = (event: any) => {
    hiddenFileInput.current!.click();
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>รูปนี้โอไม่โอ</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>รูปนี้โอไม่โอ</h1>

        <p className={styles.description}>
          ด้วย &quot;เทคโนโลยีสมัยนี้&quot; สามารถบอกได้ว่ารูปนี้โอเคหรือไม่
        </p>

        <Button variant="outlined" onClick={handleClick}>
          เลือกรูปภาพ
        </Button>
        <input
          type="file"
          ref={hiddenFileInput}
          onChange={onFileChange}
          style={{ display: "none" }}
        />
        <div
          style={{
            height: "25vh",
            position: "relative",
            width: "100%",
            textAlign: "center",
            margin: "2vh",
          }}  
        >
          <FileData />
        </div>
        <Button variant="outlined" onClick={onFileUpload}>
          วิเคราะห์รูปภาพ
        </Button>
        <div
          style={{
            height: "4rem",
            position: "relative",
            width: "100%",
            textAlign: "center",
            margin: "2vh",
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
          }}
        >
          {inProgress && <CircularProgress />}
          {!!distance && <h1 className={styles.title}> รูปนี้ดูโอ {((1-parseFloat(distance))*100).toFixed(2)}%</h1>}
        </div>
      </main>
    </div>
  );
  }